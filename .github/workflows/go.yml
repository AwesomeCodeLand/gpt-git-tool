# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

permissions:
  contents: write

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.19
      - name: Test
        run: go test -v ./...

      - name: Build
        run: go build -ldflags="-s -w" -ldflags="-X 'ggt/command.version=v0.1.0'" -ldflags="-X 'ggt/command.commit=$(git describe --tags)'" -v -o  ggt_${{ matrix.os }} cli/*.go

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ github.run_number }}-${{ matrix.os }}
          release_name: Release v${{ github.run_number }}-${{ matrix.os }}
          body: This is the release of ggt.

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./ggt_${{ matrix.os }}
          asset_name: ggt_${{ matrix.os }}
          asset_content_type: application/octet-stream
